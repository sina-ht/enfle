; enfle.rc
; Last Modified: Thu Mar  4 00:56:59 2004.
; $Id: enfle.rc,v 1.41 2004/03/03 15:57:31 sian Exp $

enfle {
  identify {
    ; disable streamer plugin
    ;streamer/disabled = yes
  }
  plugins {
    ; To execute enfle in the build tree, override the default path.
    ;dir = ../plugins
    ; comment out if you would like to use spi plugins
    spi/disabled = yes
    ; specify spi plugins path
    ;spi/dir = ../spis
    ; How to find plugins. (NOT IMPLEMENTED YET)
    ;                       ~~~~~~~~~~~~~~~~~~~
    ;  scan_all: Scan the specified directory and load all plugins found.
    ;  custom: Custom loading, can be set per plugin type.
    loadmethod = scan_all
    ui {
      ; How to find plugins.
      ;  scan_all: Scan the UI directory and load all plugins found.
      ;  ondemand: On-demand loading.
      ;  load: Load only specified plugins.
      loadmethod = ondemand
      default = Normal
      normal {
	; render = {normal|double|short|long}
	render = normal
	; magnify_interpolate = no/bilinear
	magnify_interpolate = bilinear
	; save_format = PNG/JPEG
	save_format = JPEG
	;
	deletefile_without_shift = no
	;
	;caption_template = "%i/%I:%p %f %xx%y"
        ; disable archiver plugin
        ;archiver/disabled = yes
	;
	show_comment = no
	; filename code conversion from internal representation to display
	;filename_code_conversion = yes
	;filename_code_from := UTF-8:Shift_JIS
	;filename_code_to = EUC-JP
	;;filename_code_to = EUC-JISX0213
      }
      wallpaper {
	; render = {normal|double|short|long}
	render = normal
	; magnify_interpolate = no/bilinear
	magnify_interpolate = bilinear
      }
      convert/format = PNG
    }
    video {
      ; How to find plugins.
      ;  scan_all: Scan the video directory and load all plugins found.
      ;  ondemand: On-demand loading.
      ;  load: Load only specified plugins.
      loadmethod = ondemand
      default = Xlib
      ; caption font for full screen mode
      caption_font = a14
      caption_fontset = -misc-fixed-medium-r-normal--14-*-*-*-*-*-jisx0208.1983-0
      ;caption_fontset = -misc-fixed-medium-r-normal--14-*-*-*-*-*-jisx0208.1983-0,-misc-fixed-medium-r-normal--14-*-*-*-*-*-jisx0213.2000-*
      ; Preferred format order for YUV display
      ; planar: YV12, I420, YUY2, UYVY
      ; packed: YUY2, UYVY, YV12, I420
      ; Under my environment, 'planar' decreases the number of dropped frames,
      ; but poor image quality, on the other hand 'packed' increases the number,
      ; but better image quality. Your mileage may vary.
      ;Xlib/preferred_format = planar
      Xlib/preferred_format = packed
    }
    audio {
      ; How to find plugins.
      ;  scan_all: Scan the audio directory and load all plugins found.
      ;  ondemand: On-demand loading.
      ;  load: Load only specified plugins.
      loadmethod = ondemand
      ;default = OSS
      default = ALSA
      oss/device_path = /dev/dsp
      alsa/device = default
      ; NULL or hostname:port
      esd/server = NULL
    }
    loader {
      ; How to find plugins.
      ;  scan_all: Scan the audio directory and load all plugins found.
      ;  ondemand: On-demand loading. (assoc needed).
      ;  load: Load only specified plugins.
      ;loadmethod = load(jpeg,ungif,png)
      loadmethod = scan_all
      jpeg {
	; dct_method = default/fast/slow/float/fastest
	;  Default and fastest are defined in jpeglib.h or overridden by jconfig.h.
	;  Normally, default = slow, fastest = fast.
	;  If you wanna use jpeg-mmx and gain speed, then specify as fast.
	dct_method = fast
      }
      ; Associate an extension with an appropriate plugin name.
      ; . means no further try
      assoc {
	bmp := BMP:.
	gif := UNGIF
	jpeg := JPEG:.
	jpg := JPEG:.
	jp2 := JasPer:J2K:.
	jpc := J2K:.
	png := PNG:.
      }
    }
    demultiplexer {
      assoc {
        avi := AVI:OGG:.
	ogg := OGG:.
	ogm := OGG:.
        mp3 := MP3:.
        mpg := MPEG:.
        mpeg := MPEG:.
      }
    }
    videodecoder {
      preference {
        mpeg1video := LibMPEG2:avcodec:.
        mpeg4 := DivX:avcodec:.
        msmpeg4 := DivX:avcodec:.
        msmpeg4v2 := DivX:avcodec:.
        raw := raw:.
      }
    }
    audiodecoder {
      preference {
        mp3 := mad:mpglib:.
      }
    }
    player {
      ; How to find plugins.
      ;  scan_all: Scan the audio directory and load all plugins found.
      ;  ondemand: On-demand loading. (assoc needed)
      ;  load: Load only specified plugins.
      ;loadmethod = load(libmpeg2,avifile,ungif)
      loadmethod = scan_all
      ; Associate an extension with an appropriate plugin name.
      assoc {
	asf := AviFile:.
	;avi := AviFile:.
        gif := UNGIF:.
        m1v := MPEG_lib:.
        mng := MNG:.
        mp3 := Mpglib:.
        ;mpg := LibMPEG3:.
	wmv := AviFile:.
      }
      MPEG_lib/disabled = yes
      ; libmpeg3 plugin is not maintained...
      LibMPEG3/disabled = yes
    }
    saver {
      ; How to find plugins.
      ;  scan_all: Scan the audio directory and load all plugins found.
      ;  ondemand: On-demand loading.
      ;  load: Load only specified plugins.
      loadmethod = ondemand
      png {
        compression_level = 9
	; filter = {all|default|paeth|avg|sub|up|none}
	;                        ^^-- This is correct, should not be transposed.
	filter = all
	; interlace = {yes/no} Note: interlace increases a file size slightly.
	interlace = no
      }
      jpeg {
        ; quality = 0...100
        quality = 100
      }
    }
    streamer {
      assoc {
	bz2 := BZ2:.
        gz := GZ:.
      }
    }
    archiver {
      assoc {
        tar := TAR:.
      }
    }
  }
}
